<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NCTL on encelo.github.io</title><link>https://encelo.github.io/tags/nctl/</link><description>Recent content in NCTL on encelo.github.io</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 21 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://encelo.github.io/tags/nctl/index.xml" rel="self" type="application/rss+xml"/><item><title>nCine Dev Update 22</title><link>https://encelo.github.io/2025-09-21-ncine-dev-update-22/</link><pubDate>Sun, 21 Sep 2025 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2025-09-21-ncine-dev-update-22/</guid><description>&lt;p&gt;Welcome back to another development update for the nCine, covering what has been accomplished in the first part of this year.&lt;/p&gt;</description></item><item><title>nCine Dev Update 19</title><link>https://encelo.github.io/2022-09-07-ncine-dev-update-19/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2022-09-07-ncine-dev-update-19/</guid><description>&lt;p&gt;Yet another update coming after a very long time since the previous, apologies for that. Well, at least it comes packed with a lot of enhancements from the last months. &amp;#x1f4aa;&lt;/p&gt;</description></item><item><title>nCine Dev Update 17</title><link>https://encelo.github.io/2021-06-28-ncine-dev-update-17/</link><pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2021-06-28-ncine-dev-update-17/</guid><description>&lt;p&gt;Quite some time has passed since the previous development update but I&amp;rsquo;m here again to talk about the latest nCine progress.
By the way, in case you missed the latest &lt;a
href="https://encelo.github.io/2021-06-21-ten-years-ncine/"&gt;article&lt;/a&gt;, the project has recently reached its tenth anniversary. &amp;#x1f609;&lt;/p&gt;</description></item><item><title>nCine Dev Update 15</title><link>https://encelo.github.io/2020-07-14-ncine-dev-update-15/</link><pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2020-07-14-ncine-dev-update-15/</guid><description>&lt;p&gt;I have spent nearly two months on a big task this spring: custom memory allocators.
They can be useful in different scenarios to alleviate the performance cost of allocating and deallocating memory.&lt;/p&gt;</description></item><item><title>nCine Dev Update 9</title><link>https://encelo.github.io/2019-05-14-ncine-dev-update-9/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2019-05-14-ncine-dev-update-9/</guid><description>&lt;p&gt;It has been a month and a half of small but useful updates for the nCine.&lt;/p&gt;
&lt;h3 class="relative group"&gt;LibPNG
&lt;div id="libpng" class="anchor"&gt;&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;The PNG image loader has been modified to support more color types, by copying some code from the libpng &lt;a
href="https://sourceforge.net/p/libpng/code/ci/master/tree/example.c"
target="_blank"
&gt;example&lt;/a&gt;. It means that any nCine game is now able to properly load PNG images with palette or with gray-alpha channels and to expand or strip bit depths that are different than the standard 8 bits.&lt;/p&gt;</description></item><item><title>nCine Dev Update 7</title><link>https://encelo.github.io/2019-01-08-ncine-dev-update-7/</link><pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2019-01-08-ncine-dev-update-7/</guid><description>&lt;p&gt;Just a few weeks after the last update here I&amp;rsquo;m again to write the next one in which I&amp;rsquo;m going to show you the performance of my new hash table implementation.&lt;/p&gt;</description></item><item><title>nCine Dev Update 3</title><link>https://encelo.github.io/2018-02-10-ncine-dev-update-3/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>https://encelo.github.io/2018-02-10-ncine-dev-update-3/</guid><description>&lt;p&gt;A lot of work has been carried out during the last three and a half months.&lt;/p&gt;
&lt;p&gt;First of all I have added some macros to allow asserts in the code, think about checks like this:
&lt;code&gt;ASSERT_MSG_X(index &amp;lt; size_, &amp;quot;Index %u is out of bounds (size: %u)&amp;quot;, index, size_);&lt;/code&gt;
The macro also invokes a breakpoint if a debugger is connected, allowing to inspect the context around the failure.
It was a long needed feature that I finally had the time to implement. &amp;#x1f604;&lt;/p&gt;</description></item></channel></rss>